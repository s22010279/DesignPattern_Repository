// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UnitOfWorkTest.Data;

#nullable disable

namespace UnitOfWorkTest.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20250113152137_order")]
    partial class order
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UnitOfWorkTest.Data.ActiveUser", b =>
                {
                    b.Property<int>("AutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutoId"));

                    b.Property<bool>("Active")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.HasKey("AutoId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("AutoId"));

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("ActiveUser");
                });

            modelBuilder.Entity("UnitOfWorkTest.Data.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("getdate()");

                    b.Property<decimal>("OrderTotal")
                        .HasColumnType("money");

                    b.HasKey("OrderId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("OrderId"));

                    b.ToTable("order");
                });

            modelBuilder.Entity("UnitOfWorkTest.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(500)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"));

                    b.HasIndex("Id", "Name")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("UnitOfWorkTest.Data.ActiveUser", b =>
                {
                    b.HasOne("UnitOfWorkTest.Data.User", "User")
                        .WithMany("ActiveUsers")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("UnitOfWorkTest.Data.User", b =>
                {
                    b.Navigation("ActiveUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
